# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.cloud.bigquery_reservation_v1.proto import (
    reservation_pb2 as google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2,
)
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ReservationServiceStub(object):
    """This API allows users to manage their flat-rate BigQuery reservations.

    A reservation provides computational resource guarantees, in the form of
    [slots](https://cloud.google.com/bigquery/docs/slots), to users. A slot is a
    unit of computational power in BigQuery, and serves as the basic unit of
    parallelism. In a scan of a multi-partitioned table, a single slot operates
    on a single partition of the table. A reservation resource exists as a child
    resource of the admin project and location, e.g.:
    `projects/myproject/locations/US/reservations/reservationName`.

    A capacity commitment is a way to purchase compute capacity for BigQuery jobs
    (in the form of slots) with some committed period of usage. A capacity
    commitment resource exists as a child resource of the admin project and
    location, e.g.:
    `projects/myproject/locations/US/capacityCommitments/id`.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateReservation = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/CreateReservation",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateReservationRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.FromString,
        )
        self.ListReservations = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/ListReservations",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListReservationsRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListReservationsResponse.FromString,
        )
        self.GetReservation = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/GetReservation",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetReservationRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.FromString,
        )
        self.DeleteReservation = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/DeleteReservation",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteReservationRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.UpdateReservation = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/UpdateReservation",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateReservationRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.FromString,
        )
        self.CreateCapacityCommitment = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/CreateCapacityCommitment",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateCapacityCommitmentRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.FromString,
        )
        self.ListCapacityCommitments = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/ListCapacityCommitments",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListCapacityCommitmentsRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListCapacityCommitmentsResponse.FromString,
        )
        self.GetCapacityCommitment = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/GetCapacityCommitment",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetCapacityCommitmentRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.FromString,
        )
        self.DeleteCapacityCommitment = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/DeleteCapacityCommitment",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteCapacityCommitmentRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.UpdateCapacityCommitment = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/UpdateCapacityCommitment",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateCapacityCommitmentRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.FromString,
        )
        self.SplitCapacityCommitment = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/SplitCapacityCommitment",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SplitCapacityCommitmentRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SplitCapacityCommitmentResponse.FromString,
        )
        self.MergeCapacityCommitments = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/MergeCapacityCommitments",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.MergeCapacityCommitmentsRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.FromString,
        )
        self.CreateAssignment = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/CreateAssignment",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateAssignmentRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Assignment.FromString,
        )
        self.ListAssignments = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/ListAssignments",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListAssignmentsRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListAssignmentsResponse.FromString,
        )
        self.DeleteAssignment = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/DeleteAssignment",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteAssignmentRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.SearchAssignments = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/SearchAssignments",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SearchAssignmentsRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SearchAssignmentsResponse.FromString,
        )
        self.MoveAssignment = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/MoveAssignment",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.MoveAssignmentRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Assignment.FromString,
        )
        self.GetBiReservation = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/GetBiReservation",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetBiReservationRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.BiReservation.FromString,
        )
        self.UpdateBiReservation = channel.unary_unary(
            "/google.cloud.bigquery.reservation.v1.ReservationService/UpdateBiReservation",
            request_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateBiReservationRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.BiReservation.FromString,
        )


class ReservationServiceServicer(object):
    """This API allows users to manage their flat-rate BigQuery reservations.

    A reservation provides computational resource guarantees, in the form of
    [slots](https://cloud.google.com/bigquery/docs/slots), to users. A slot is a
    unit of computational power in BigQuery, and serves as the basic unit of
    parallelism. In a scan of a multi-partitioned table, a single slot operates
    on a single partition of the table. A reservation resource exists as a child
    resource of the admin project and location, e.g.:
    `projects/myproject/locations/US/reservations/reservationName`.

    A capacity commitment is a way to purchase compute capacity for BigQuery jobs
    (in the form of slots) with some committed period of usage. A capacity
    commitment resource exists as a child resource of the admin project and
    location, e.g.:
    `projects/myproject/locations/US/capacityCommitments/id`.
    """

    def CreateReservation(self, request, context):
        """Creates a new reservation resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListReservations(self, request, context):
        """Lists all the reservations for the project in the specified location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetReservation(self, request, context):
        """Returns information about the reservation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteReservation(self, request, context):
        """Deletes a reservation.
        Returns `google.rpc.Code.FAILED_PRECONDITION` when reservation has
        assignments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateReservation(self, request, context):
        """Updates an existing reservation resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateCapacityCommitment(self, request, context):
        """Creates a new capacity commitment resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListCapacityCommitments(self, request, context):
        """Lists all the capacity commitments for the admin project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetCapacityCommitment(self, request, context):
        """Returns information about the capacity commitment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteCapacityCommitment(self, request, context):
        """Deletes a capacity commitment. Attempting to delete capacity commitment
        before its commitment_end_time will fail with the error code
        `google.rpc.Code.FAILED_PRECONDITION`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateCapacityCommitment(self, request, context):
        """Updates an existing capacity commitment.

        Only `plan` and `renewal_plan` fields can be updated.

        Plan can only be changed to a plan of a longer commitment period.
        Attempting to change to a plan with shorter commitment period will fail
        with the error code `google.rpc.Code.FAILED_PRECONDITION`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SplitCapacityCommitment(self, request, context):
        """Splits capacity commitment to two commitments of the same plan and
        `commitment_end_time`.

        A common use case is to enable downgrading commitments.

        For example, in order to downgrade from 10000 slots to 8000, you might
        split a 10000 capacity commitment into commitments of 2000 and 8000. Then,
        you would change the plan of the first one to `FLEX` and then delete it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def MergeCapacityCommitments(self, request, context):
        """Merges capacity commitments of the same plan into a single commitment.

        The resulting capacity commitment has the greater commitment_end_time
        out of the to-be-merged capacity commitments.

        Attempting to merge capacity commitments of different plan will fail
        with the error code `google.rpc.Code.FAILED_PRECONDITION`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateAssignment(self, request, context):
        """Creates an assignment object which allows the given project to submit jobs
        of a certain type using slots from the specified reservation.

        Currently a
        resource (project, folder, organization) can only have one assignment per
        each (job_type, location) combination, and that reservation will be used
        for all jobs of the matching type.

        Different assignments can be created on different levels of the
        projects, folders or organization hierarchy.  During query execution,
        the assignment is looked up at the project, folder and organization levels
        in that order. The first assignment found is applied to the query.

        When creating assignments, it does not matter if other assignments exist at
        higher levels.

        Example:

        * The organization `organizationA` contains two projects, `project1`
        and `project2`.
        * Assignments for all three entities (`organizationA`, `project1`, and
        `project2`) could all be created and mapped to the same or different
        reservations.

        Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have
        'bigquery.admin' permissions on the project using the reservation
        and the project that owns this reservation.

        Returns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment
        does not match location of the reservation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListAssignments(self, request, context):
        """Lists assignments.

        Only explicitly created assignments will be returned.

        Example:

        * Organization `organizationA` contains two projects, `project1` and
        `project2`.
        * Reservation `res1` exists and was created previously.
        * CreateAssignment was used previously to define the following
        associations between entities and reservations: `<organizationA, res1>`
        and `<project1, res1>`

        In this example, ListAssignments will just return the above two assignments
        for reservation `res1`, and no expansion/merge will happen.

        The wildcard "-" can be used for
        reservations in the request. In that case all assignments belongs to the
        specified project and location will be listed.

        **Note** "-" cannot be used for projects nor locations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteAssignment(self, request, context):
        """Deletes a assignment. No expansion will happen.

        Example:

        * Organization `organizationA` contains two projects, `project1` and
        `project2`.
        * Reservation `res1` exists and was created previously.
        * CreateAssignment was used previously to define the following
        associations between entities and reservations: `<organizationA, res1>`
        and `<project1, res1>`

        In this example, deletion of the `<organizationA, res1>` assignment won't
        affect the other assignment `<project1, res1>`. After said deletion,
        queries from `project1` will still use `res1` while queries from
        `project2` will switch to use on-demand mode.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SearchAssignments(self, request, context):
        """Looks up assignments for a specified resource for a particular region.
        If the request is about a project:

        1. Assignments created on the project will be returned if they exist.
        2. Otherwise assignments created on the closest ancestor will be
        returned.
        3. Assignments for different JobTypes will all be returned.

        The same logic applies if the request is about a folder.

        If the request is about an organization, then assignments created on the
        organization will be returned (organization doesn't have ancestors).

        Comparing to ListAssignments, there are some behavior
        differences:

        1. permission on the assignee will be verified in this API.
        2. Hierarchy lookup (project->folder->organization) happens in this API.
        3. Parent here is `projects/*/locations/*`, instead of
        `projects/*/locations/*reservations/*`.

        **Note** "-" cannot be used for projects
        nor locations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def MoveAssignment(self, request, context):
        """Moves an assignment under a new reservation.

        This differs from removing an existing assignment and recreating a new one
        by providing a transactional change that ensures an assignee always has an
        associated reservation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetBiReservation(self, request, context):
        """Retrieves a BI reservation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateBiReservation(self, request, context):
        """Updates a BI reservation.

        Only fields specified in the `field_mask` are updated.

        A singleton BI reservation always exists with default size 0.
        In order to reserve BI capacity it needs to be updated to an amount
        greater than 0. In order to release BI capacity reservation size
        must be set to 0.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ReservationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateReservation": grpc.unary_unary_rpc_method_handler(
            servicer.CreateReservation,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateReservationRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.SerializeToString,
        ),
        "ListReservations": grpc.unary_unary_rpc_method_handler(
            servicer.ListReservations,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListReservationsRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListReservationsResponse.SerializeToString,
        ),
        "GetReservation": grpc.unary_unary_rpc_method_handler(
            servicer.GetReservation,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetReservationRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.SerializeToString,
        ),
        "DeleteReservation": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteReservation,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteReservationRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "UpdateReservation": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateReservation,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateReservationRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.SerializeToString,
        ),
        "CreateCapacityCommitment": grpc.unary_unary_rpc_method_handler(
            servicer.CreateCapacityCommitment,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateCapacityCommitmentRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.SerializeToString,
        ),
        "ListCapacityCommitments": grpc.unary_unary_rpc_method_handler(
            servicer.ListCapacityCommitments,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListCapacityCommitmentsRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListCapacityCommitmentsResponse.SerializeToString,
        ),
        "GetCapacityCommitment": grpc.unary_unary_rpc_method_handler(
            servicer.GetCapacityCommitment,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetCapacityCommitmentRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.SerializeToString,
        ),
        "DeleteCapacityCommitment": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteCapacityCommitment,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteCapacityCommitmentRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "UpdateCapacityCommitment": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateCapacityCommitment,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateCapacityCommitmentRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.SerializeToString,
        ),
        "SplitCapacityCommitment": grpc.unary_unary_rpc_method_handler(
            servicer.SplitCapacityCommitment,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SplitCapacityCommitmentRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SplitCapacityCommitmentResponse.SerializeToString,
        ),
        "MergeCapacityCommitments": grpc.unary_unary_rpc_method_handler(
            servicer.MergeCapacityCommitments,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.MergeCapacityCommitmentsRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.SerializeToString,
        ),
        "CreateAssignment": grpc.unary_unary_rpc_method_handler(
            servicer.CreateAssignment,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateAssignmentRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Assignment.SerializeToString,
        ),
        "ListAssignments": grpc.unary_unary_rpc_method_handler(
            servicer.ListAssignments,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListAssignmentsRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListAssignmentsResponse.SerializeToString,
        ),
        "DeleteAssignment": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAssignment,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteAssignmentRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "SearchAssignments": grpc.unary_unary_rpc_method_handler(
            servicer.SearchAssignments,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SearchAssignmentsRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SearchAssignmentsResponse.SerializeToString,
        ),
        "MoveAssignment": grpc.unary_unary_rpc_method_handler(
            servicer.MoveAssignment,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.MoveAssignmentRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Assignment.SerializeToString,
        ),
        "GetBiReservation": grpc.unary_unary_rpc_method_handler(
            servicer.GetBiReservation,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetBiReservationRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.BiReservation.SerializeToString,
        ),
        "UpdateBiReservation": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateBiReservation,
            request_deserializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateBiReservationRequest.FromString,
            response_serializer=google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.BiReservation.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "google.cloud.bigquery.reservation.v1.ReservationService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ReservationService(object):
    """This API allows users to manage their flat-rate BigQuery reservations.

    A reservation provides computational resource guarantees, in the form of
    [slots](https://cloud.google.com/bigquery/docs/slots), to users. A slot is a
    unit of computational power in BigQuery, and serves as the basic unit of
    parallelism. In a scan of a multi-partitioned table, a single slot operates
    on a single partition of the table. A reservation resource exists as a child
    resource of the admin project and location, e.g.:
    `projects/myproject/locations/US/reservations/reservationName`.

    A capacity commitment is a way to purchase compute capacity for BigQuery jobs
    (in the form of slots) with some committed period of usage. A capacity
    commitment resource exists as a child resource of the admin project and
    location, e.g.:
    `projects/myproject/locations/US/capacityCommitments/id`.
    """

    @staticmethod
    def CreateReservation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/CreateReservation",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateReservationRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListReservations(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/ListReservations",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListReservationsRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListReservationsResponse.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetReservation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/GetReservation",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetReservationRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteReservation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/DeleteReservation",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteReservationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateReservation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/UpdateReservation",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateReservationRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Reservation.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateCapacityCommitment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/CreateCapacityCommitment",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateCapacityCommitmentRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListCapacityCommitments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/ListCapacityCommitments",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListCapacityCommitmentsRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListCapacityCommitmentsResponse.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetCapacityCommitment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/GetCapacityCommitment",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetCapacityCommitmentRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteCapacityCommitment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/DeleteCapacityCommitment",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteCapacityCommitmentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateCapacityCommitment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/UpdateCapacityCommitment",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateCapacityCommitmentRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SplitCapacityCommitment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/SplitCapacityCommitment",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SplitCapacityCommitmentRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SplitCapacityCommitmentResponse.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def MergeCapacityCommitments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/MergeCapacityCommitments",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.MergeCapacityCommitmentsRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CapacityCommitment.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateAssignment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/CreateAssignment",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.CreateAssignmentRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Assignment.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListAssignments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/ListAssignments",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListAssignmentsRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.ListAssignmentsResponse.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteAssignment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/DeleteAssignment",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.DeleteAssignmentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SearchAssignments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/SearchAssignments",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SearchAssignmentsRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.SearchAssignmentsResponse.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def MoveAssignment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/MoveAssignment",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.MoveAssignmentRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.Assignment.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetBiReservation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/GetBiReservation",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.GetBiReservationRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.BiReservation.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateBiReservation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.bigquery.reservation.v1.ReservationService/UpdateBiReservation",
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.UpdateBiReservationRequest.SerializeToString,
            google_dot_cloud_dot_bigquery__reservation__v1_dot_proto_dot_reservation__pb2.BiReservation.FromString,
            options,
            channel_credentials,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
